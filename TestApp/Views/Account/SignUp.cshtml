@model TestApp.Models.ViewModels.SignUpViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up</title>
    <style>
        body {
            background: url('image/image1.jpg') no-repeat center center fixed !important;
            background-size: cover !important;
            background-repeat: no-repeat;
            background-attachment: fixed;
            font-family: Arial, sans-serif;
            margin: 0; /* Remove default margin */
            color: #333;
        }

        .signup-container {
            background: rgba(255, 255, 255, 0.8);
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
            text-align: center;
            margin: 100px 0 0 20px; /* Adjusted margin to move it down */
        }

        h2 {
            font-size: 2.5rem;
            margin-bottom: 1.5rem;
            color: #333;
        }

        .form-group {
            margin-bottom: 1rem;
            text-align: left;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-size: 1.2rem;
            color: #333;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 1rem;
        }

        .btn-primary {
            width: 100%;
            padding: 0.75rem;
            border: none;
            border-radius: 5px;
            background-color: #007bff;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }

        .alert-danger {
            background-color: rgba(255, 0, 0, 0.1);
            padding: 1rem;
            border-radius: 5px;
            margin-bottom: 1rem;
            color: #dc3545;
        }

        .alert-danger ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .alert-danger li {
            margin-bottom: 0.5rem;
        }

        p {
            font-size: 1.1rem;
        }

        p a {
            color: #007bff;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        p a:hover {
            color: #0056b3;
        }
    </style>
</head>
<body>
<div class="signup-container">
    <h2>Sign Up</h2>

    @if (!ViewData.ModelState.IsValid)
    {
    <div class="alert alert-danger">
    <ul>
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
    <li>@error.ErrorMessage</li>
        }
    </ul>
    </div>
    }

    <form method="post">
        <div class="form-group">
            <label for="Username">Username</label>
            <input type="text" class="form-control" id="Username" name="Username" value="@Model.Username" required />
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Email">Email</label>
            <input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" required />
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Password">Password</label>
            <input type="password" class="form-control" id="Password" name="Password" required />
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="ConfirmPassword">Confirm Password</label>
            <input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword" required />
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Role">Role</label>
            <select class="form-control" id="Role" name="Role" required>
                <option value="" disabled selected>Select your role</option>
                <option value="Admin">Admin</option>
                <option value="Learner">Learner</option>
                <option value="Instructor">Instructor</option>
            </select>
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
        <button type="submit" class="btn btn-primary">Sign Up</button>
    </form>
</div>
</body>
</html>